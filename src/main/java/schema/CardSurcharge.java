// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: submit_booking.proto

package schema;

/**
 * Protobuf type {@code submit_booking.CardSurcharge}
 */
public  final class CardSurcharge extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:submit_booking.CardSurcharge)
    CardSurchargeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CardSurcharge.newBuilder() to construct.
  private CardSurcharge(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CardSurcharge() {
    fees_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CardSurcharge(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              fees_ = new java.util.ArrayList<schema.Price>();
              mutable_bitField0_ |= 0x00000001;
            }
            fees_.add(
                input.readMessage(schema.Price.parser(), extensionRegistry));
            break;
          }
          case 17: {

            percentage_ = input.readDouble();
            break;
          }
          case 25: {

            surchargeCap_ = input.readDouble();
            break;
          }
          case 34: {
            schema.Price.Builder subBuilder = null;
            if (total_ != null) {
              subBuilder = total_.toBuilder();
            }
            total_ = input.readMessage(schema.Price.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(total_);
              total_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        fees_ = java.util.Collections.unmodifiableList(fees_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return schema.SubmitBooking.internal_static_submit_booking_CardSurcharge_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return schema.SubmitBooking.internal_static_submit_booking_CardSurcharge_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            schema.CardSurcharge.class, schema.CardSurcharge.Builder.class);
  }

  private int bitField0_;
  public static final int FEES_FIELD_NUMBER = 1;
  private java.util.List<schema.Price> fees_;
  /**
   * <code>repeated .submit_booking.Price fees = 1;</code>
   */
  public java.util.List<schema.Price> getFeesList() {
    return fees_;
  }
  /**
   * <code>repeated .submit_booking.Price fees = 1;</code>
   */
  public java.util.List<? extends schema.PriceOrBuilder> 
      getFeesOrBuilderList() {
    return fees_;
  }
  /**
   * <code>repeated .submit_booking.Price fees = 1;</code>
   */
  public int getFeesCount() {
    return fees_.size();
  }
  /**
   * <code>repeated .submit_booking.Price fees = 1;</code>
   */
  public schema.Price getFees(int index) {
    return fees_.get(index);
  }
  /**
   * <code>repeated .submit_booking.Price fees = 1;</code>
   */
  public schema.PriceOrBuilder getFeesOrBuilder(
      int index) {
    return fees_.get(index);
  }

  public static final int PERCENTAGE_FIELD_NUMBER = 2;
  private double percentage_;
  /**
   * <code>double percentage = 2;</code>
   */
  public double getPercentage() {
    return percentage_;
  }

  public static final int SURCHARGE_CAP_FIELD_NUMBER = 3;
  private double surchargeCap_;
  /**
   * <code>double surcharge_cap = 3;</code>
   */
  public double getSurchargeCap() {
    return surchargeCap_;
  }

  public static final int TOTAL_FIELD_NUMBER = 4;
  private schema.Price total_;
  /**
   * <code>.submit_booking.Price total = 4;</code>
   */
  public boolean hasTotal() {
    return total_ != null;
  }
  /**
   * <code>.submit_booking.Price total = 4;</code>
   */
  public schema.Price getTotal() {
    return total_ == null ? schema.Price.getDefaultInstance() : total_;
  }
  /**
   * <code>.submit_booking.Price total = 4;</code>
   */
  public schema.PriceOrBuilder getTotalOrBuilder() {
    return getTotal();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < fees_.size(); i++) {
      output.writeMessage(1, fees_.get(i));
    }
    if (percentage_ != 0D) {
      output.writeDouble(2, percentage_);
    }
    if (surchargeCap_ != 0D) {
      output.writeDouble(3, surchargeCap_);
    }
    if (total_ != null) {
      output.writeMessage(4, getTotal());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < fees_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, fees_.get(i));
    }
    if (percentage_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, percentage_);
    }
    if (surchargeCap_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, surchargeCap_);
    }
    if (total_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTotal());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof schema.CardSurcharge)) {
      return super.equals(obj);
    }
    schema.CardSurcharge other = (schema.CardSurcharge) obj;

    if (!getFeesList()
        .equals(other.getFeesList())) return false;
    if (java.lang.Double.doubleToLongBits(getPercentage())
        != java.lang.Double.doubleToLongBits(
            other.getPercentage())) return false;
    if (java.lang.Double.doubleToLongBits(getSurchargeCap())
        != java.lang.Double.doubleToLongBits(
            other.getSurchargeCap())) return false;
    if (hasTotal() != other.hasTotal()) return false;
    if (hasTotal()) {
      if (!getTotal()
          .equals(other.getTotal())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getFeesCount() > 0) {
      hash = (37 * hash) + FEES_FIELD_NUMBER;
      hash = (53 * hash) + getFeesList().hashCode();
    }
    hash = (37 * hash) + PERCENTAGE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPercentage()));
    hash = (37 * hash) + SURCHARGE_CAP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSurchargeCap()));
    if (hasTotal()) {
      hash = (37 * hash) + TOTAL_FIELD_NUMBER;
      hash = (53 * hash) + getTotal().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static schema.CardSurcharge parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.CardSurcharge parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.CardSurcharge parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.CardSurcharge parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.CardSurcharge parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.CardSurcharge parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.CardSurcharge parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schema.CardSurcharge parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static schema.CardSurcharge parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static schema.CardSurcharge parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static schema.CardSurcharge parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schema.CardSurcharge parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(schema.CardSurcharge prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code submit_booking.CardSurcharge}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:submit_booking.CardSurcharge)
      schema.CardSurchargeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return schema.SubmitBooking.internal_static_submit_booking_CardSurcharge_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return schema.SubmitBooking.internal_static_submit_booking_CardSurcharge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              schema.CardSurcharge.class, schema.CardSurcharge.Builder.class);
    }

    // Construct using schema.CardSurcharge.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getFeesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (feesBuilder_ == null) {
        fees_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        feesBuilder_.clear();
      }
      percentage_ = 0D;

      surchargeCap_ = 0D;

      if (totalBuilder_ == null) {
        total_ = null;
      } else {
        total_ = null;
        totalBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return schema.SubmitBooking.internal_static_submit_booking_CardSurcharge_descriptor;
    }

    @java.lang.Override
    public schema.CardSurcharge getDefaultInstanceForType() {
      return schema.CardSurcharge.getDefaultInstance();
    }

    @java.lang.Override
    public schema.CardSurcharge build() {
      schema.CardSurcharge result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public schema.CardSurcharge buildPartial() {
      schema.CardSurcharge result = new schema.CardSurcharge(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (feesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          fees_ = java.util.Collections.unmodifiableList(fees_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.fees_ = fees_;
      } else {
        result.fees_ = feesBuilder_.build();
      }
      result.percentage_ = percentage_;
      result.surchargeCap_ = surchargeCap_;
      if (totalBuilder_ == null) {
        result.total_ = total_;
      } else {
        result.total_ = totalBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof schema.CardSurcharge) {
        return mergeFrom((schema.CardSurcharge)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(schema.CardSurcharge other) {
      if (other == schema.CardSurcharge.getDefaultInstance()) return this;
      if (feesBuilder_ == null) {
        if (!other.fees_.isEmpty()) {
          if (fees_.isEmpty()) {
            fees_ = other.fees_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFeesIsMutable();
            fees_.addAll(other.fees_);
          }
          onChanged();
        }
      } else {
        if (!other.fees_.isEmpty()) {
          if (feesBuilder_.isEmpty()) {
            feesBuilder_.dispose();
            feesBuilder_ = null;
            fees_ = other.fees_;
            bitField0_ = (bitField0_ & ~0x00000001);
            feesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFeesFieldBuilder() : null;
          } else {
            feesBuilder_.addAllMessages(other.fees_);
          }
        }
      }
      if (other.getPercentage() != 0D) {
        setPercentage(other.getPercentage());
      }
      if (other.getSurchargeCap() != 0D) {
        setSurchargeCap(other.getSurchargeCap());
      }
      if (other.hasTotal()) {
        mergeTotal(other.getTotal());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      schema.CardSurcharge parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (schema.CardSurcharge) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<schema.Price> fees_ =
      java.util.Collections.emptyList();
    private void ensureFeesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        fees_ = new java.util.ArrayList<schema.Price>(fees_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        schema.Price, schema.Price.Builder, schema.PriceOrBuilder> feesBuilder_;

    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public java.util.List<schema.Price> getFeesList() {
      if (feesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fees_);
      } else {
        return feesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public int getFeesCount() {
      if (feesBuilder_ == null) {
        return fees_.size();
      } else {
        return feesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public schema.Price getFees(int index) {
      if (feesBuilder_ == null) {
        return fees_.get(index);
      } else {
        return feesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder setFees(
        int index, schema.Price value) {
      if (feesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeesIsMutable();
        fees_.set(index, value);
        onChanged();
      } else {
        feesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder setFees(
        int index, schema.Price.Builder builderForValue) {
      if (feesBuilder_ == null) {
        ensureFeesIsMutable();
        fees_.set(index, builderForValue.build());
        onChanged();
      } else {
        feesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder addFees(schema.Price value) {
      if (feesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeesIsMutable();
        fees_.add(value);
        onChanged();
      } else {
        feesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder addFees(
        int index, schema.Price value) {
      if (feesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFeesIsMutable();
        fees_.add(index, value);
        onChanged();
      } else {
        feesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder addFees(
        schema.Price.Builder builderForValue) {
      if (feesBuilder_ == null) {
        ensureFeesIsMutable();
        fees_.add(builderForValue.build());
        onChanged();
      } else {
        feesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder addFees(
        int index, schema.Price.Builder builderForValue) {
      if (feesBuilder_ == null) {
        ensureFeesIsMutable();
        fees_.add(index, builderForValue.build());
        onChanged();
      } else {
        feesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder addAllFees(
        java.lang.Iterable<? extends schema.Price> values) {
      if (feesBuilder_ == null) {
        ensureFeesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fees_);
        onChanged();
      } else {
        feesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder clearFees() {
      if (feesBuilder_ == null) {
        fees_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        feesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public Builder removeFees(int index) {
      if (feesBuilder_ == null) {
        ensureFeesIsMutable();
        fees_.remove(index);
        onChanged();
      } else {
        feesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public schema.Price.Builder getFeesBuilder(
        int index) {
      return getFeesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public schema.PriceOrBuilder getFeesOrBuilder(
        int index) {
      if (feesBuilder_ == null) {
        return fees_.get(index);  } else {
        return feesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public java.util.List<? extends schema.PriceOrBuilder> 
         getFeesOrBuilderList() {
      if (feesBuilder_ != null) {
        return feesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fees_);
      }
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public schema.Price.Builder addFeesBuilder() {
      return getFeesFieldBuilder().addBuilder(
          schema.Price.getDefaultInstance());
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public schema.Price.Builder addFeesBuilder(
        int index) {
      return getFeesFieldBuilder().addBuilder(
          index, schema.Price.getDefaultInstance());
    }
    /**
     * <code>repeated .submit_booking.Price fees = 1;</code>
     */
    public java.util.List<schema.Price.Builder> 
         getFeesBuilderList() {
      return getFeesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        schema.Price, schema.Price.Builder, schema.PriceOrBuilder> 
        getFeesFieldBuilder() {
      if (feesBuilder_ == null) {
        feesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            schema.Price, schema.Price.Builder, schema.PriceOrBuilder>(
                fees_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        fees_ = null;
      }
      return feesBuilder_;
    }

    private double percentage_ ;
    /**
     * <code>double percentage = 2;</code>
     */
    public double getPercentage() {
      return percentage_;
    }
    /**
     * <code>double percentage = 2;</code>
     */
    public Builder setPercentage(double value) {
      
      percentage_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double percentage = 2;</code>
     */
    public Builder clearPercentage() {
      
      percentage_ = 0D;
      onChanged();
      return this;
    }

    private double surchargeCap_ ;
    /**
     * <code>double surcharge_cap = 3;</code>
     */
    public double getSurchargeCap() {
      return surchargeCap_;
    }
    /**
     * <code>double surcharge_cap = 3;</code>
     */
    public Builder setSurchargeCap(double value) {
      
      surchargeCap_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double surcharge_cap = 3;</code>
     */
    public Builder clearSurchargeCap() {
      
      surchargeCap_ = 0D;
      onChanged();
      return this;
    }

    private schema.Price total_;
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Price, schema.Price.Builder, schema.PriceOrBuilder> totalBuilder_;
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public boolean hasTotal() {
      return totalBuilder_ != null || total_ != null;
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public schema.Price getTotal() {
      if (totalBuilder_ == null) {
        return total_ == null ? schema.Price.getDefaultInstance() : total_;
      } else {
        return totalBuilder_.getMessage();
      }
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public Builder setTotal(schema.Price value) {
      if (totalBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        total_ = value;
        onChanged();
      } else {
        totalBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public Builder setTotal(
        schema.Price.Builder builderForValue) {
      if (totalBuilder_ == null) {
        total_ = builderForValue.build();
        onChanged();
      } else {
        totalBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public Builder mergeTotal(schema.Price value) {
      if (totalBuilder_ == null) {
        if (total_ != null) {
          total_ =
            schema.Price.newBuilder(total_).mergeFrom(value).buildPartial();
        } else {
          total_ = value;
        }
        onChanged();
      } else {
        totalBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public Builder clearTotal() {
      if (totalBuilder_ == null) {
        total_ = null;
        onChanged();
      } else {
        total_ = null;
        totalBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public schema.Price.Builder getTotalBuilder() {
      
      onChanged();
      return getTotalFieldBuilder().getBuilder();
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    public schema.PriceOrBuilder getTotalOrBuilder() {
      if (totalBuilder_ != null) {
        return totalBuilder_.getMessageOrBuilder();
      } else {
        return total_ == null ?
            schema.Price.getDefaultInstance() : total_;
      }
    }
    /**
     * <code>.submit_booking.Price total = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Price, schema.Price.Builder, schema.PriceOrBuilder> 
        getTotalFieldBuilder() {
      if (totalBuilder_ == null) {
        totalBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            schema.Price, schema.Price.Builder, schema.PriceOrBuilder>(
                getTotal(),
                getParentForChildren(),
                isClean());
        total_ = null;
      }
      return totalBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:submit_booking.CardSurcharge)
  }

  // @@protoc_insertion_point(class_scope:submit_booking.CardSurcharge)
  private static final schema.CardSurcharge DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new schema.CardSurcharge();
  }

  public static schema.CardSurcharge getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CardSurcharge>
      PARSER = new com.google.protobuf.AbstractParser<CardSurcharge>() {
    @java.lang.Override
    public CardSurcharge parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CardSurcharge(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CardSurcharge> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CardSurcharge> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public schema.CardSurcharge getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

