// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: submit_booking.proto

package schema;

/**
 * Protobuf type {@code submit_booking.PricedItem}
 */
public  final class PricedItem extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:submit_booking.PricedItem)
    PricedItemOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PricedItem.newBuilder() to construct.
  private PricedItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PricedItem() {
    itemId_ = "";
    surcharges_ = java.util.Collections.emptyList();
    tax_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PricedItem(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            schema.Fee.Builder subBuilder = null;
            if (base_ != null) {
              subBuilder = base_.toBuilder();
            }
            base_ = input.readMessage(schema.Fee.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(base_);
              base_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            itemId_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              surcharges_ = new java.util.ArrayList<schema.Fee>();
              mutable_bitField0_ |= 0x00000004;
            }
            surcharges_.add(
                input.readMessage(schema.Fee.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              tax_ = new java.util.ArrayList<schema.Tax>();
              mutable_bitField0_ |= 0x00000008;
            }
            tax_.add(
                input.readMessage(schema.Tax.parser(), extensionRegistry));
            break;
          }
          case 42: {
            schema.Price.Builder subBuilder = null;
            if (totalAmount_ != null) {
              subBuilder = totalAmount_.toBuilder();
            }
            totalAmount_ = input.readMessage(schema.Price.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(totalAmount_);
              totalAmount_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        surcharges_ = java.util.Collections.unmodifiableList(surcharges_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        tax_ = java.util.Collections.unmodifiableList(tax_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return schema.SubmitBooking.internal_static_submit_booking_PricedItem_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return schema.SubmitBooking.internal_static_submit_booking_PricedItem_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            schema.PricedItem.class, schema.PricedItem.Builder.class);
  }

  private int bitField0_;
  public static final int BASE_FIELD_NUMBER = 1;
  private schema.Fee base_;
  /**
   * <pre>
   * Base amount for a specific product, purpose, or service.
   * </pre>
   *
   * <code>.submit_booking.Fee base = 1;</code>
   */
  public boolean hasBase() {
    return base_ != null;
  }
  /**
   * <pre>
   * Base amount for a specific product, purpose, or service.
   * </pre>
   *
   * <code>.submit_booking.Fee base = 1;</code>
   */
  public schema.Fee getBase() {
    return base_ == null ? schema.Fee.getDefaultInstance() : base_;
  }
  /**
   * <pre>
   * Base amount for a specific product, purpose, or service.
   * </pre>
   *
   * <code>.submit_booking.Fee base = 1;</code>
   */
  public schema.FeeOrBuilder getBaseOrBuilder() {
    return getBase();
  }

  public static final int ITEM_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object itemId_;
  /**
   * <code>string item_id = 2;</code>
   */
  public java.lang.String getItemId() {
    java.lang.Object ref = itemId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      itemId_ = s;
      return s;
    }
  }
  /**
   * <code>string item_id = 2;</code>
   */
  public com.google.protobuf.ByteString
      getItemIdBytes() {
    java.lang.Object ref = itemId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      itemId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SURCHARGES_FIELD_NUMBER = 3;
  private java.util.List<schema.Fee> surcharges_;
  /**
   * <pre>
   * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
   * or added to the cost of some goods, services, and transactions.
   * </pre>
   *
   * <code>repeated .submit_booking.Fee surcharges = 3;</code>
   */
  public java.util.List<schema.Fee> getSurchargesList() {
    return surcharges_;
  }
  /**
   * <pre>
   * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
   * or added to the cost of some goods, services, and transactions.
   * </pre>
   *
   * <code>repeated .submit_booking.Fee surcharges = 3;</code>
   */
  public java.util.List<? extends schema.FeeOrBuilder> 
      getSurchargesOrBuilderList() {
    return surcharges_;
  }
  /**
   * <pre>
   * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
   * or added to the cost of some goods, services, and transactions.
   * </pre>
   *
   * <code>repeated .submit_booking.Fee surcharges = 3;</code>
   */
  public int getSurchargesCount() {
    return surcharges_.size();
  }
  /**
   * <pre>
   * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
   * or added to the cost of some goods, services, and transactions.
   * </pre>
   *
   * <code>repeated .submit_booking.Fee surcharges = 3;</code>
   */
  public schema.Fee getSurcharges(int index) {
    return surcharges_.get(index);
  }
  /**
   * <pre>
   * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
   * or added to the cost of some goods, services, and transactions.
   * </pre>
   *
   * <code>repeated .submit_booking.Fee surcharges = 3;</code>
   */
  public schema.FeeOrBuilder getSurchargesOrBuilder(
      int index) {
    return surcharges_.get(index);
  }

  public static final int TAX_FIELD_NUMBER = 4;
  private java.util.List<schema.Tax> tax_;
  /**
   * <pre>
   * Amount added on to a charge for a specific product, purpose, or service.
   * </pre>
   *
   * <code>repeated .submit_booking.Tax tax = 4;</code>
   */
  public java.util.List<schema.Tax> getTaxList() {
    return tax_;
  }
  /**
   * <pre>
   * Amount added on to a charge for a specific product, purpose, or service.
   * </pre>
   *
   * <code>repeated .submit_booking.Tax tax = 4;</code>
   */
  public java.util.List<? extends schema.TaxOrBuilder> 
      getTaxOrBuilderList() {
    return tax_;
  }
  /**
   * <pre>
   * Amount added on to a charge for a specific product, purpose, or service.
   * </pre>
   *
   * <code>repeated .submit_booking.Tax tax = 4;</code>
   */
  public int getTaxCount() {
    return tax_.size();
  }
  /**
   * <pre>
   * Amount added on to a charge for a specific product, purpose, or service.
   * </pre>
   *
   * <code>repeated .submit_booking.Tax tax = 4;</code>
   */
  public schema.Tax getTax(int index) {
    return tax_.get(index);
  }
  /**
   * <pre>
   * Amount added on to a charge for a specific product, purpose, or service.
   * </pre>
   *
   * <code>repeated .submit_booking.Tax tax = 4;</code>
   */
  public schema.TaxOrBuilder getTaxOrBuilder(
      int index) {
    return tax_.get(index);
  }

  public static final int TOTAL_AMOUNT_FIELD_NUMBER = 5;
  private schema.Price totalAmount_;
  /**
   * <code>.submit_booking.Price total_amount = 5;</code>
   */
  public boolean hasTotalAmount() {
    return totalAmount_ != null;
  }
  /**
   * <code>.submit_booking.Price total_amount = 5;</code>
   */
  public schema.Price getTotalAmount() {
    return totalAmount_ == null ? schema.Price.getDefaultInstance() : totalAmount_;
  }
  /**
   * <code>.submit_booking.Price total_amount = 5;</code>
   */
  public schema.PriceOrBuilder getTotalAmountOrBuilder() {
    return getTotalAmount();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (base_ != null) {
      output.writeMessage(1, getBase());
    }
    if (!getItemIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, itemId_);
    }
    for (int i = 0; i < surcharges_.size(); i++) {
      output.writeMessage(3, surcharges_.get(i));
    }
    for (int i = 0; i < tax_.size(); i++) {
      output.writeMessage(4, tax_.get(i));
    }
    if (totalAmount_ != null) {
      output.writeMessage(5, getTotalAmount());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (base_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getBase());
    }
    if (!getItemIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, itemId_);
    }
    for (int i = 0; i < surcharges_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, surcharges_.get(i));
    }
    for (int i = 0; i < tax_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, tax_.get(i));
    }
    if (totalAmount_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTotalAmount());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof schema.PricedItem)) {
      return super.equals(obj);
    }
    schema.PricedItem other = (schema.PricedItem) obj;

    if (hasBase() != other.hasBase()) return false;
    if (hasBase()) {
      if (!getBase()
          .equals(other.getBase())) return false;
    }
    if (!getItemId()
        .equals(other.getItemId())) return false;
    if (!getSurchargesList()
        .equals(other.getSurchargesList())) return false;
    if (!getTaxList()
        .equals(other.getTaxList())) return false;
    if (hasTotalAmount() != other.hasTotalAmount()) return false;
    if (hasTotalAmount()) {
      if (!getTotalAmount()
          .equals(other.getTotalAmount())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasBase()) {
      hash = (37 * hash) + BASE_FIELD_NUMBER;
      hash = (53 * hash) + getBase().hashCode();
    }
    hash = (37 * hash) + ITEM_ID_FIELD_NUMBER;
    hash = (53 * hash) + getItemId().hashCode();
    if (getSurchargesCount() > 0) {
      hash = (37 * hash) + SURCHARGES_FIELD_NUMBER;
      hash = (53 * hash) + getSurchargesList().hashCode();
    }
    if (getTaxCount() > 0) {
      hash = (37 * hash) + TAX_FIELD_NUMBER;
      hash = (53 * hash) + getTaxList().hashCode();
    }
    if (hasTotalAmount()) {
      hash = (37 * hash) + TOTAL_AMOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getTotalAmount().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static schema.PricedItem parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.PricedItem parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.PricedItem parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.PricedItem parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.PricedItem parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.PricedItem parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.PricedItem parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schema.PricedItem parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static schema.PricedItem parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static schema.PricedItem parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static schema.PricedItem parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schema.PricedItem parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(schema.PricedItem prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code submit_booking.PricedItem}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:submit_booking.PricedItem)
      schema.PricedItemOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return schema.SubmitBooking.internal_static_submit_booking_PricedItem_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return schema.SubmitBooking.internal_static_submit_booking_PricedItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              schema.PricedItem.class, schema.PricedItem.Builder.class);
    }

    // Construct using schema.PricedItem.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSurchargesFieldBuilder();
        getTaxFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (baseBuilder_ == null) {
        base_ = null;
      } else {
        base_ = null;
        baseBuilder_ = null;
      }
      itemId_ = "";

      if (surchargesBuilder_ == null) {
        surcharges_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        surchargesBuilder_.clear();
      }
      if (taxBuilder_ == null) {
        tax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        taxBuilder_.clear();
      }
      if (totalAmountBuilder_ == null) {
        totalAmount_ = null;
      } else {
        totalAmount_ = null;
        totalAmountBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return schema.SubmitBooking.internal_static_submit_booking_PricedItem_descriptor;
    }

    @java.lang.Override
    public schema.PricedItem getDefaultInstanceForType() {
      return schema.PricedItem.getDefaultInstance();
    }

    @java.lang.Override
    public schema.PricedItem build() {
      schema.PricedItem result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public schema.PricedItem buildPartial() {
      schema.PricedItem result = new schema.PricedItem(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (baseBuilder_ == null) {
        result.base_ = base_;
      } else {
        result.base_ = baseBuilder_.build();
      }
      result.itemId_ = itemId_;
      if (surchargesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          surcharges_ = java.util.Collections.unmodifiableList(surcharges_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.surcharges_ = surcharges_;
      } else {
        result.surcharges_ = surchargesBuilder_.build();
      }
      if (taxBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          tax_ = java.util.Collections.unmodifiableList(tax_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tax_ = tax_;
      } else {
        result.tax_ = taxBuilder_.build();
      }
      if (totalAmountBuilder_ == null) {
        result.totalAmount_ = totalAmount_;
      } else {
        result.totalAmount_ = totalAmountBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof schema.PricedItem) {
        return mergeFrom((schema.PricedItem)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(schema.PricedItem other) {
      if (other == schema.PricedItem.getDefaultInstance()) return this;
      if (other.hasBase()) {
        mergeBase(other.getBase());
      }
      if (!other.getItemId().isEmpty()) {
        itemId_ = other.itemId_;
        onChanged();
      }
      if (surchargesBuilder_ == null) {
        if (!other.surcharges_.isEmpty()) {
          if (surcharges_.isEmpty()) {
            surcharges_ = other.surcharges_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSurchargesIsMutable();
            surcharges_.addAll(other.surcharges_);
          }
          onChanged();
        }
      } else {
        if (!other.surcharges_.isEmpty()) {
          if (surchargesBuilder_.isEmpty()) {
            surchargesBuilder_.dispose();
            surchargesBuilder_ = null;
            surcharges_ = other.surcharges_;
            bitField0_ = (bitField0_ & ~0x00000004);
            surchargesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSurchargesFieldBuilder() : null;
          } else {
            surchargesBuilder_.addAllMessages(other.surcharges_);
          }
        }
      }
      if (taxBuilder_ == null) {
        if (!other.tax_.isEmpty()) {
          if (tax_.isEmpty()) {
            tax_ = other.tax_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTaxIsMutable();
            tax_.addAll(other.tax_);
          }
          onChanged();
        }
      } else {
        if (!other.tax_.isEmpty()) {
          if (taxBuilder_.isEmpty()) {
            taxBuilder_.dispose();
            taxBuilder_ = null;
            tax_ = other.tax_;
            bitField0_ = (bitField0_ & ~0x00000008);
            taxBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTaxFieldBuilder() : null;
          } else {
            taxBuilder_.addAllMessages(other.tax_);
          }
        }
      }
      if (other.hasTotalAmount()) {
        mergeTotalAmount(other.getTotalAmount());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      schema.PricedItem parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (schema.PricedItem) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private schema.Fee base_;
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Fee, schema.Fee.Builder, schema.FeeOrBuilder> baseBuilder_;
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public boolean hasBase() {
      return baseBuilder_ != null || base_ != null;
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public schema.Fee getBase() {
      if (baseBuilder_ == null) {
        return base_ == null ? schema.Fee.getDefaultInstance() : base_;
      } else {
        return baseBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public Builder setBase(schema.Fee value) {
      if (baseBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        base_ = value;
        onChanged();
      } else {
        baseBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public Builder setBase(
        schema.Fee.Builder builderForValue) {
      if (baseBuilder_ == null) {
        base_ = builderForValue.build();
        onChanged();
      } else {
        baseBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public Builder mergeBase(schema.Fee value) {
      if (baseBuilder_ == null) {
        if (base_ != null) {
          base_ =
            schema.Fee.newBuilder(base_).mergeFrom(value).buildPartial();
        } else {
          base_ = value;
        }
        onChanged();
      } else {
        baseBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public Builder clearBase() {
      if (baseBuilder_ == null) {
        base_ = null;
        onChanged();
      } else {
        base_ = null;
        baseBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public schema.Fee.Builder getBaseBuilder() {
      
      onChanged();
      return getBaseFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    public schema.FeeOrBuilder getBaseOrBuilder() {
      if (baseBuilder_ != null) {
        return baseBuilder_.getMessageOrBuilder();
      } else {
        return base_ == null ?
            schema.Fee.getDefaultInstance() : base_;
      }
    }
    /**
     * <pre>
     * Base amount for a specific product, purpose, or service.
     * </pre>
     *
     * <code>.submit_booking.Fee base = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Fee, schema.Fee.Builder, schema.FeeOrBuilder> 
        getBaseFieldBuilder() {
      if (baseBuilder_ == null) {
        baseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            schema.Fee, schema.Fee.Builder, schema.FeeOrBuilder>(
                getBase(),
                getParentForChildren(),
                isClean());
        base_ = null;
      }
      return baseBuilder_;
    }

    private java.lang.Object itemId_ = "";
    /**
     * <code>string item_id = 2;</code>
     */
    public java.lang.String getItemId() {
      java.lang.Object ref = itemId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        itemId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string item_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getItemIdBytes() {
      java.lang.Object ref = itemId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        itemId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string item_id = 2;</code>
     */
    public Builder setItemId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      itemId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string item_id = 2;</code>
     */
    public Builder clearItemId() {
      
      itemId_ = getDefaultInstance().getItemId();
      onChanged();
      return this;
    }
    /**
     * <code>string item_id = 2;</code>
     */
    public Builder setItemIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      itemId_ = value;
      onChanged();
      return this;
    }

    private java.util.List<schema.Fee> surcharges_ =
      java.util.Collections.emptyList();
    private void ensureSurchargesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        surcharges_ = new java.util.ArrayList<schema.Fee>(surcharges_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        schema.Fee, schema.Fee.Builder, schema.FeeOrBuilder> surchargesBuilder_;

    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public java.util.List<schema.Fee> getSurchargesList() {
      if (surchargesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(surcharges_);
      } else {
        return surchargesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public int getSurchargesCount() {
      if (surchargesBuilder_ == null) {
        return surcharges_.size();
      } else {
        return surchargesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public schema.Fee getSurcharges(int index) {
      if (surchargesBuilder_ == null) {
        return surcharges_.get(index);
      } else {
        return surchargesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder setSurcharges(
        int index, schema.Fee value) {
      if (surchargesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurchargesIsMutable();
        surcharges_.set(index, value);
        onChanged();
      } else {
        surchargesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder setSurcharges(
        int index, schema.Fee.Builder builderForValue) {
      if (surchargesBuilder_ == null) {
        ensureSurchargesIsMutable();
        surcharges_.set(index, builderForValue.build());
        onChanged();
      } else {
        surchargesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder addSurcharges(schema.Fee value) {
      if (surchargesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurchargesIsMutable();
        surcharges_.add(value);
        onChanged();
      } else {
        surchargesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder addSurcharges(
        int index, schema.Fee value) {
      if (surchargesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSurchargesIsMutable();
        surcharges_.add(index, value);
        onChanged();
      } else {
        surchargesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder addSurcharges(
        schema.Fee.Builder builderForValue) {
      if (surchargesBuilder_ == null) {
        ensureSurchargesIsMutable();
        surcharges_.add(builderForValue.build());
        onChanged();
      } else {
        surchargesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder addSurcharges(
        int index, schema.Fee.Builder builderForValue) {
      if (surchargesBuilder_ == null) {
        ensureSurchargesIsMutable();
        surcharges_.add(index, builderForValue.build());
        onChanged();
      } else {
        surchargesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder addAllSurcharges(
        java.lang.Iterable<? extends schema.Fee> values) {
      if (surchargesBuilder_ == null) {
        ensureSurchargesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, surcharges_);
        onChanged();
      } else {
        surchargesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder clearSurcharges() {
      if (surchargesBuilder_ == null) {
        surcharges_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        surchargesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public Builder removeSurcharges(int index) {
      if (surchargesBuilder_ == null) {
        ensureSurchargesIsMutable();
        surcharges_.remove(index);
        onChanged();
      } else {
        surchargesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public schema.Fee.Builder getSurchargesBuilder(
        int index) {
      return getSurchargesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public schema.FeeOrBuilder getSurchargesOrBuilder(
        int index) {
      if (surchargesBuilder_ == null) {
        return surcharges_.get(index);  } else {
        return surchargesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public java.util.List<? extends schema.FeeOrBuilder> 
         getSurchargesOrBuilderList() {
      if (surchargesBuilder_ != null) {
        return surchargesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(surcharges_);
      }
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public schema.Fee.Builder addSurchargesBuilder() {
      return getSurchargesFieldBuilder().addBuilder(
          schema.Fee.getDefaultInstance());
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public schema.Fee.Builder addSurchargesBuilder(
        int index) {
      return getSurchargesFieldBuilder().addBuilder(
          index, schema.Fee.getDefaultInstance());
    }
    /**
     * <pre>
     * A compulsory contribution to state revenue, levied by the government on workers' income and business profits
     * or added to the cost of some goods, services, and transactions.
     * </pre>
     *
     * <code>repeated .submit_booking.Fee surcharges = 3;</code>
     */
    public java.util.List<schema.Fee.Builder> 
         getSurchargesBuilderList() {
      return getSurchargesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        schema.Fee, schema.Fee.Builder, schema.FeeOrBuilder> 
        getSurchargesFieldBuilder() {
      if (surchargesBuilder_ == null) {
        surchargesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            schema.Fee, schema.Fee.Builder, schema.FeeOrBuilder>(
                surcharges_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        surcharges_ = null;
      }
      return surchargesBuilder_;
    }

    private java.util.List<schema.Tax> tax_ =
      java.util.Collections.emptyList();
    private void ensureTaxIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        tax_ = new java.util.ArrayList<schema.Tax>(tax_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        schema.Tax, schema.Tax.Builder, schema.TaxOrBuilder> taxBuilder_;

    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public java.util.List<schema.Tax> getTaxList() {
      if (taxBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tax_);
      } else {
        return taxBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public int getTaxCount() {
      if (taxBuilder_ == null) {
        return tax_.size();
      } else {
        return taxBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public schema.Tax getTax(int index) {
      if (taxBuilder_ == null) {
        return tax_.get(index);
      } else {
        return taxBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder setTax(
        int index, schema.Tax value) {
      if (taxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaxIsMutable();
        tax_.set(index, value);
        onChanged();
      } else {
        taxBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder setTax(
        int index, schema.Tax.Builder builderForValue) {
      if (taxBuilder_ == null) {
        ensureTaxIsMutable();
        tax_.set(index, builderForValue.build());
        onChanged();
      } else {
        taxBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder addTax(schema.Tax value) {
      if (taxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaxIsMutable();
        tax_.add(value);
        onChanged();
      } else {
        taxBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder addTax(
        int index, schema.Tax value) {
      if (taxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaxIsMutable();
        tax_.add(index, value);
        onChanged();
      } else {
        taxBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder addTax(
        schema.Tax.Builder builderForValue) {
      if (taxBuilder_ == null) {
        ensureTaxIsMutable();
        tax_.add(builderForValue.build());
        onChanged();
      } else {
        taxBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder addTax(
        int index, schema.Tax.Builder builderForValue) {
      if (taxBuilder_ == null) {
        ensureTaxIsMutable();
        tax_.add(index, builderForValue.build());
        onChanged();
      } else {
        taxBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder addAllTax(
        java.lang.Iterable<? extends schema.Tax> values) {
      if (taxBuilder_ == null) {
        ensureTaxIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tax_);
        onChanged();
      } else {
        taxBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder clearTax() {
      if (taxBuilder_ == null) {
        tax_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        taxBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public Builder removeTax(int index) {
      if (taxBuilder_ == null) {
        ensureTaxIsMutable();
        tax_.remove(index);
        onChanged();
      } else {
        taxBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public schema.Tax.Builder getTaxBuilder(
        int index) {
      return getTaxFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public schema.TaxOrBuilder getTaxOrBuilder(
        int index) {
      if (taxBuilder_ == null) {
        return tax_.get(index);  } else {
        return taxBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public java.util.List<? extends schema.TaxOrBuilder> 
         getTaxOrBuilderList() {
      if (taxBuilder_ != null) {
        return taxBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tax_);
      }
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public schema.Tax.Builder addTaxBuilder() {
      return getTaxFieldBuilder().addBuilder(
          schema.Tax.getDefaultInstance());
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public schema.Tax.Builder addTaxBuilder(
        int index) {
      return getTaxFieldBuilder().addBuilder(
          index, schema.Tax.getDefaultInstance());
    }
    /**
     * <pre>
     * Amount added on to a charge for a specific product, purpose, or service.
     * </pre>
     *
     * <code>repeated .submit_booking.Tax tax = 4;</code>
     */
    public java.util.List<schema.Tax.Builder> 
         getTaxBuilderList() {
      return getTaxFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        schema.Tax, schema.Tax.Builder, schema.TaxOrBuilder> 
        getTaxFieldBuilder() {
      if (taxBuilder_ == null) {
        taxBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            schema.Tax, schema.Tax.Builder, schema.TaxOrBuilder>(
                tax_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        tax_ = null;
      }
      return taxBuilder_;
    }

    private schema.Price totalAmount_;
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Price, schema.Price.Builder, schema.PriceOrBuilder> totalAmountBuilder_;
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public boolean hasTotalAmount() {
      return totalAmountBuilder_ != null || totalAmount_ != null;
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public schema.Price getTotalAmount() {
      if (totalAmountBuilder_ == null) {
        return totalAmount_ == null ? schema.Price.getDefaultInstance() : totalAmount_;
      } else {
        return totalAmountBuilder_.getMessage();
      }
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public Builder setTotalAmount(schema.Price value) {
      if (totalAmountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        totalAmount_ = value;
        onChanged();
      } else {
        totalAmountBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public Builder setTotalAmount(
        schema.Price.Builder builderForValue) {
      if (totalAmountBuilder_ == null) {
        totalAmount_ = builderForValue.build();
        onChanged();
      } else {
        totalAmountBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public Builder mergeTotalAmount(schema.Price value) {
      if (totalAmountBuilder_ == null) {
        if (totalAmount_ != null) {
          totalAmount_ =
            schema.Price.newBuilder(totalAmount_).mergeFrom(value).buildPartial();
        } else {
          totalAmount_ = value;
        }
        onChanged();
      } else {
        totalAmountBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public Builder clearTotalAmount() {
      if (totalAmountBuilder_ == null) {
        totalAmount_ = null;
        onChanged();
      } else {
        totalAmount_ = null;
        totalAmountBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public schema.Price.Builder getTotalAmountBuilder() {
      
      onChanged();
      return getTotalAmountFieldBuilder().getBuilder();
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    public schema.PriceOrBuilder getTotalAmountOrBuilder() {
      if (totalAmountBuilder_ != null) {
        return totalAmountBuilder_.getMessageOrBuilder();
      } else {
        return totalAmount_ == null ?
            schema.Price.getDefaultInstance() : totalAmount_;
      }
    }
    /**
     * <code>.submit_booking.Price total_amount = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Price, schema.Price.Builder, schema.PriceOrBuilder> 
        getTotalAmountFieldBuilder() {
      if (totalAmountBuilder_ == null) {
        totalAmountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            schema.Price, schema.Price.Builder, schema.PriceOrBuilder>(
                getTotalAmount(),
                getParentForChildren(),
                isClean());
        totalAmount_ = null;
      }
      return totalAmountBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:submit_booking.PricedItem)
  }

  // @@protoc_insertion_point(class_scope:submit_booking.PricedItem)
  private static final schema.PricedItem DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new schema.PricedItem();
  }

  public static schema.PricedItem getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PricedItem>
      PARSER = new com.google.protobuf.AbstractParser<PricedItem>() {
    @java.lang.Override
    public PricedItem parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PricedItem(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PricedItem> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PricedItem> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public schema.PricedItem getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

