// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: submit_booking.proto

package schema;

/**
 * Protobuf type {@code submit_booking.PaymentCard}
 */
public  final class PaymentCard extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:submit_booking.PaymentCard)
    PaymentCardOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PaymentCard.newBuilder() to construct.
  private PaymentCard(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PaymentCard() {
    cardBrandCode_ = "";
    cardProductTypeCode_ = "";
    cardTypeText_ = "";
    encryptedCardNumber_ = "";
    encryptedCardSecurityCode_ = "";
    expirationDate_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PaymentCard(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            cardBrandCode_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            cardProductTypeCode_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            cardTypeText_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            encryptedCardNumber_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            encryptedCardSecurityCode_ = s;
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            expirationDate_ = s;
            break;
          }
          case 58: {
            schema.ContactInfo.Builder subBuilder = null;
            if (holderContact_ != null) {
              subBuilder = holderContact_.toBuilder();
            }
            holderContact_ = input.readMessage(schema.ContactInfo.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(holderContact_);
              holderContact_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            schema.Name.Builder subBuilder = null;
            if (holderName_ != null) {
              subBuilder = holderName_.toBuilder();
            }
            holderName_ = input.readMessage(schema.Name.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(holderName_);
              holderName_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return schema.SubmitBooking.internal_static_submit_booking_PaymentCard_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return schema.SubmitBooking.internal_static_submit_booking_PaymentCard_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            schema.PaymentCard.class, schema.PaymentCard.Builder.class);
  }

  public static final int CARD_BRAND_CODE_FIELD_NUMBER = 1;
  private volatile java.lang.Object cardBrandCode_;
  /**
   * <pre>
   * A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa
   * </pre>
   *
   * <code>string card_brand_code = 1;</code>
   */
  public java.lang.String getCardBrandCode() {
    java.lang.Object ref = cardBrandCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cardBrandCode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa
   * </pre>
   *
   * <code>string card_brand_code = 1;</code>
   */
  public com.google.protobuf.ByteString
      getCardBrandCodeBytes() {
    java.lang.Object ref = cardBrandCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cardBrandCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CARD_PRODUCT_TYPE_CODE_FIELD_NUMBER = 2;
  private volatile java.lang.Object cardProductTypeCode_;
  /**
   * <pre>
   * Used to specify whether the card is a Consumer (personal) or Commercial (corporate) card.
   * </pre>
   *
   * <code>string card_product_type_code = 2;</code>
   */
  public java.lang.String getCardProductTypeCode() {
    java.lang.Object ref = cardProductTypeCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cardProductTypeCode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Used to specify whether the card is a Consumer (personal) or Commercial (corporate) card.
   * </pre>
   *
   * <code>string card_product_type_code = 2;</code>
   */
  public com.google.protobuf.ByteString
      getCardProductTypeCodeBytes() {
    java.lang.Object ref = cardProductTypeCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cardProductTypeCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CARD_TYPE_TEXT_FIELD_NUMBER = 3;
  private volatile java.lang.Object cardTypeText_;
  /**
   * <pre>
   * Additional description for the magnetic stripe card type (debit card, credit card, prepaid card, etc.)
   * </pre>
   *
   * <code>string card_type_text = 3;</code>
   */
  public java.lang.String getCardTypeText() {
    java.lang.Object ref = cardTypeText_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      cardTypeText_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Additional description for the magnetic stripe card type (debit card, credit card, prepaid card, etc.)
   * </pre>
   *
   * <code>string card_type_text = 3;</code>
   */
  public com.google.protobuf.ByteString
      getCardTypeTextBytes() {
    java.lang.Object ref = cardTypeText_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      cardTypeText_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENCRYPTED_CARD_NUMBER_FIELD_NUMBER = 4;
  private volatile java.lang.Object encryptedCardNumber_;
  /**
   * <code>string encrypted_card_number = 4;</code>
   */
  public java.lang.String getEncryptedCardNumber() {
    java.lang.Object ref = encryptedCardNumber_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      encryptedCardNumber_ = s;
      return s;
    }
  }
  /**
   * <code>string encrypted_card_number = 4;</code>
   */
  public com.google.protobuf.ByteString
      getEncryptedCardNumberBytes() {
    java.lang.Object ref = encryptedCardNumber_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      encryptedCardNumber_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENCRYPTED_CARD_SECURITY_CODE_FIELD_NUMBER = 5;
  private volatile java.lang.Object encryptedCardSecurityCode_;
  /**
   * <pre>
   * 3-digit number printed on the signature panel on the back of the card and following the last four digits of the
   * Primary Account Number (PAN). For American Express,  4 digits located on the front of the card, above the card
   * number on the right hand side. Visa - CVV2, MasterCard - CVC2, American Express - CID, Discover - CMID,
   * Union Pay - CVN2, JCB - CAV2.
   * It should be a nonce provided by Braintree since Skyscanner is not PCI compliance.
   * </pre>
   *
   * <code>string encrypted_card_security_code = 5;</code>
   */
  public java.lang.String getEncryptedCardSecurityCode() {
    java.lang.Object ref = encryptedCardSecurityCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      encryptedCardSecurityCode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 3-digit number printed on the signature panel on the back of the card and following the last four digits of the
   * Primary Account Number (PAN). For American Express,  4 digits located on the front of the card, above the card
   * number on the right hand side. Visa - CVV2, MasterCard - CVC2, American Express - CID, Discover - CMID,
   * Union Pay - CVN2, JCB - CAV2.
   * It should be a nonce provided by Braintree since Skyscanner is not PCI compliance.
   * </pre>
   *
   * <code>string encrypted_card_security_code = 5;</code>
   */
  public com.google.protobuf.ByteString
      getEncryptedCardSecurityCodeBytes() {
    java.lang.Object ref = encryptedCardSecurityCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      encryptedCardSecurityCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EXPIRATION_DATE_FIELD_NUMBER = 6;
  private volatile java.lang.Object expirationDate_;
  /**
   * <pre>
   * The last month of validity Example: 0119
   * </pre>
   *
   * <code>string expiration_date = 6;</code>
   */
  public java.lang.String getExpirationDate() {
    java.lang.Object ref = expirationDate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      expirationDate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The last month of validity Example: 0119
   * </pre>
   *
   * <code>string expiration_date = 6;</code>
   */
  public com.google.protobuf.ByteString
      getExpirationDateBytes() {
    java.lang.Object ref = expirationDate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      expirationDate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HOLDER_CONTACT_FIELD_NUMBER = 7;
  private schema.ContactInfo holderContact_;
  /**
   * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
   */
  public boolean hasHolderContact() {
    return holderContact_ != null;
  }
  /**
   * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
   */
  public schema.ContactInfo getHolderContact() {
    return holderContact_ == null ? schema.ContactInfo.getDefaultInstance() : holderContact_;
  }
  /**
   * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
   */
  public schema.ContactInfoOrBuilder getHolderContactOrBuilder() {
    return getHolderContact();
  }

  public static final int HOLDER_NAME_FIELD_NUMBER = 8;
  private schema.Name holderName_;
  /**
   * <code>.submit_booking.Name holder_name = 8;</code>
   */
  public boolean hasHolderName() {
    return holderName_ != null;
  }
  /**
   * <code>.submit_booking.Name holder_name = 8;</code>
   */
  public schema.Name getHolderName() {
    return holderName_ == null ? schema.Name.getDefaultInstance() : holderName_;
  }
  /**
   * <code>.submit_booking.Name holder_name = 8;</code>
   */
  public schema.NameOrBuilder getHolderNameOrBuilder() {
    return getHolderName();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getCardBrandCodeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cardBrandCode_);
    }
    if (!getCardProductTypeCodeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cardProductTypeCode_);
    }
    if (!getCardTypeTextBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, cardTypeText_);
    }
    if (!getEncryptedCardNumberBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, encryptedCardNumber_);
    }
    if (!getEncryptedCardSecurityCodeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, encryptedCardSecurityCode_);
    }
    if (!getExpirationDateBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, expirationDate_);
    }
    if (holderContact_ != null) {
      output.writeMessage(7, getHolderContact());
    }
    if (holderName_ != null) {
      output.writeMessage(8, getHolderName());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getCardBrandCodeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cardBrandCode_);
    }
    if (!getCardProductTypeCodeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, cardProductTypeCode_);
    }
    if (!getCardTypeTextBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, cardTypeText_);
    }
    if (!getEncryptedCardNumberBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, encryptedCardNumber_);
    }
    if (!getEncryptedCardSecurityCodeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, encryptedCardSecurityCode_);
    }
    if (!getExpirationDateBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, expirationDate_);
    }
    if (holderContact_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getHolderContact());
    }
    if (holderName_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getHolderName());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof schema.PaymentCard)) {
      return super.equals(obj);
    }
    schema.PaymentCard other = (schema.PaymentCard) obj;

    if (!getCardBrandCode()
        .equals(other.getCardBrandCode())) return false;
    if (!getCardProductTypeCode()
        .equals(other.getCardProductTypeCode())) return false;
    if (!getCardTypeText()
        .equals(other.getCardTypeText())) return false;
    if (!getEncryptedCardNumber()
        .equals(other.getEncryptedCardNumber())) return false;
    if (!getEncryptedCardSecurityCode()
        .equals(other.getEncryptedCardSecurityCode())) return false;
    if (!getExpirationDate()
        .equals(other.getExpirationDate())) return false;
    if (hasHolderContact() != other.hasHolderContact()) return false;
    if (hasHolderContact()) {
      if (!getHolderContact()
          .equals(other.getHolderContact())) return false;
    }
    if (hasHolderName() != other.hasHolderName()) return false;
    if (hasHolderName()) {
      if (!getHolderName()
          .equals(other.getHolderName())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CARD_BRAND_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getCardBrandCode().hashCode();
    hash = (37 * hash) + CARD_PRODUCT_TYPE_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getCardProductTypeCode().hashCode();
    hash = (37 * hash) + CARD_TYPE_TEXT_FIELD_NUMBER;
    hash = (53 * hash) + getCardTypeText().hashCode();
    hash = (37 * hash) + ENCRYPTED_CARD_NUMBER_FIELD_NUMBER;
    hash = (53 * hash) + getEncryptedCardNumber().hashCode();
    hash = (37 * hash) + ENCRYPTED_CARD_SECURITY_CODE_FIELD_NUMBER;
    hash = (53 * hash) + getEncryptedCardSecurityCode().hashCode();
    hash = (37 * hash) + EXPIRATION_DATE_FIELD_NUMBER;
    hash = (53 * hash) + getExpirationDate().hashCode();
    if (hasHolderContact()) {
      hash = (37 * hash) + HOLDER_CONTACT_FIELD_NUMBER;
      hash = (53 * hash) + getHolderContact().hashCode();
    }
    if (hasHolderName()) {
      hash = (37 * hash) + HOLDER_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getHolderName().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static schema.PaymentCard parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.PaymentCard parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.PaymentCard parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.PaymentCard parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.PaymentCard parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static schema.PaymentCard parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static schema.PaymentCard parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schema.PaymentCard parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static schema.PaymentCard parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static schema.PaymentCard parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static schema.PaymentCard parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static schema.PaymentCard parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(schema.PaymentCard prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code submit_booking.PaymentCard}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:submit_booking.PaymentCard)
      schema.PaymentCardOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return schema.SubmitBooking.internal_static_submit_booking_PaymentCard_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return schema.SubmitBooking.internal_static_submit_booking_PaymentCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              schema.PaymentCard.class, schema.PaymentCard.Builder.class);
    }

    // Construct using schema.PaymentCard.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      cardBrandCode_ = "";

      cardProductTypeCode_ = "";

      cardTypeText_ = "";

      encryptedCardNumber_ = "";

      encryptedCardSecurityCode_ = "";

      expirationDate_ = "";

      if (holderContactBuilder_ == null) {
        holderContact_ = null;
      } else {
        holderContact_ = null;
        holderContactBuilder_ = null;
      }
      if (holderNameBuilder_ == null) {
        holderName_ = null;
      } else {
        holderName_ = null;
        holderNameBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return schema.SubmitBooking.internal_static_submit_booking_PaymentCard_descriptor;
    }

    @java.lang.Override
    public schema.PaymentCard getDefaultInstanceForType() {
      return schema.PaymentCard.getDefaultInstance();
    }

    @java.lang.Override
    public schema.PaymentCard build() {
      schema.PaymentCard result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public schema.PaymentCard buildPartial() {
      schema.PaymentCard result = new schema.PaymentCard(this);
      result.cardBrandCode_ = cardBrandCode_;
      result.cardProductTypeCode_ = cardProductTypeCode_;
      result.cardTypeText_ = cardTypeText_;
      result.encryptedCardNumber_ = encryptedCardNumber_;
      result.encryptedCardSecurityCode_ = encryptedCardSecurityCode_;
      result.expirationDate_ = expirationDate_;
      if (holderContactBuilder_ == null) {
        result.holderContact_ = holderContact_;
      } else {
        result.holderContact_ = holderContactBuilder_.build();
      }
      if (holderNameBuilder_ == null) {
        result.holderName_ = holderName_;
      } else {
        result.holderName_ = holderNameBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof schema.PaymentCard) {
        return mergeFrom((schema.PaymentCard)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(schema.PaymentCard other) {
      if (other == schema.PaymentCard.getDefaultInstance()) return this;
      if (!other.getCardBrandCode().isEmpty()) {
        cardBrandCode_ = other.cardBrandCode_;
        onChanged();
      }
      if (!other.getCardProductTypeCode().isEmpty()) {
        cardProductTypeCode_ = other.cardProductTypeCode_;
        onChanged();
      }
      if (!other.getCardTypeText().isEmpty()) {
        cardTypeText_ = other.cardTypeText_;
        onChanged();
      }
      if (!other.getEncryptedCardNumber().isEmpty()) {
        encryptedCardNumber_ = other.encryptedCardNumber_;
        onChanged();
      }
      if (!other.getEncryptedCardSecurityCode().isEmpty()) {
        encryptedCardSecurityCode_ = other.encryptedCardSecurityCode_;
        onChanged();
      }
      if (!other.getExpirationDate().isEmpty()) {
        expirationDate_ = other.expirationDate_;
        onChanged();
      }
      if (other.hasHolderContact()) {
        mergeHolderContact(other.getHolderContact());
      }
      if (other.hasHolderName()) {
        mergeHolderName(other.getHolderName());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      schema.PaymentCard parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (schema.PaymentCard) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object cardBrandCode_ = "";
    /**
     * <pre>
     * A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa
     * </pre>
     *
     * <code>string card_brand_code = 1;</code>
     */
    public java.lang.String getCardBrandCode() {
      java.lang.Object ref = cardBrandCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cardBrandCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa
     * </pre>
     *
     * <code>string card_brand_code = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCardBrandCodeBytes() {
      java.lang.Object ref = cardBrandCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardBrandCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa
     * </pre>
     *
     * <code>string card_brand_code = 1;</code>
     */
    public Builder setCardBrandCode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cardBrandCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa
     * </pre>
     *
     * <code>string card_brand_code = 1;</code>
     */
    public Builder clearCardBrandCode() {
      
      cardBrandCode_ = getDefaultInstance().getCardBrandCode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A two-letter code assigned according to IATA Resolution 728. Example: VI for Visa
     * </pre>
     *
     * <code>string card_brand_code = 1;</code>
     */
    public Builder setCardBrandCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cardBrandCode_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object cardProductTypeCode_ = "";
    /**
     * <pre>
     * Used to specify whether the card is a Consumer (personal) or Commercial (corporate) card.
     * </pre>
     *
     * <code>string card_product_type_code = 2;</code>
     */
    public java.lang.String getCardProductTypeCode() {
      java.lang.Object ref = cardProductTypeCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cardProductTypeCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Used to specify whether the card is a Consumer (personal) or Commercial (corporate) card.
     * </pre>
     *
     * <code>string card_product_type_code = 2;</code>
     */
    public com.google.protobuf.ByteString
        getCardProductTypeCodeBytes() {
      java.lang.Object ref = cardProductTypeCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardProductTypeCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Used to specify whether the card is a Consumer (personal) or Commercial (corporate) card.
     * </pre>
     *
     * <code>string card_product_type_code = 2;</code>
     */
    public Builder setCardProductTypeCode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cardProductTypeCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to specify whether the card is a Consumer (personal) or Commercial (corporate) card.
     * </pre>
     *
     * <code>string card_product_type_code = 2;</code>
     */
    public Builder clearCardProductTypeCode() {
      
      cardProductTypeCode_ = getDefaultInstance().getCardProductTypeCode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Used to specify whether the card is a Consumer (personal) or Commercial (corporate) card.
     * </pre>
     *
     * <code>string card_product_type_code = 2;</code>
     */
    public Builder setCardProductTypeCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cardProductTypeCode_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object cardTypeText_ = "";
    /**
     * <pre>
     * Additional description for the magnetic stripe card type (debit card, credit card, prepaid card, etc.)
     * </pre>
     *
     * <code>string card_type_text = 3;</code>
     */
    public java.lang.String getCardTypeText() {
      java.lang.Object ref = cardTypeText_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cardTypeText_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Additional description for the magnetic stripe card type (debit card, credit card, prepaid card, etc.)
     * </pre>
     *
     * <code>string card_type_text = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCardTypeTextBytes() {
      java.lang.Object ref = cardTypeText_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cardTypeText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Additional description for the magnetic stripe card type (debit card, credit card, prepaid card, etc.)
     * </pre>
     *
     * <code>string card_type_text = 3;</code>
     */
    public Builder setCardTypeText(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      cardTypeText_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional description for the magnetic stripe card type (debit card, credit card, prepaid card, etc.)
     * </pre>
     *
     * <code>string card_type_text = 3;</code>
     */
    public Builder clearCardTypeText() {
      
      cardTypeText_ = getDefaultInstance().getCardTypeText();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Additional description for the magnetic stripe card type (debit card, credit card, prepaid card, etc.)
     * </pre>
     *
     * <code>string card_type_text = 3;</code>
     */
    public Builder setCardTypeTextBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      cardTypeText_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object encryptedCardNumber_ = "";
    /**
     * <code>string encrypted_card_number = 4;</code>
     */
    public java.lang.String getEncryptedCardNumber() {
      java.lang.Object ref = encryptedCardNumber_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encryptedCardNumber_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string encrypted_card_number = 4;</code>
     */
    public com.google.protobuf.ByteString
        getEncryptedCardNumberBytes() {
      java.lang.Object ref = encryptedCardNumber_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encryptedCardNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string encrypted_card_number = 4;</code>
     */
    public Builder setEncryptedCardNumber(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      encryptedCardNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string encrypted_card_number = 4;</code>
     */
    public Builder clearEncryptedCardNumber() {
      
      encryptedCardNumber_ = getDefaultInstance().getEncryptedCardNumber();
      onChanged();
      return this;
    }
    /**
     * <code>string encrypted_card_number = 4;</code>
     */
    public Builder setEncryptedCardNumberBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      encryptedCardNumber_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object encryptedCardSecurityCode_ = "";
    /**
     * <pre>
     * 3-digit number printed on the signature panel on the back of the card and following the last four digits of the
     * Primary Account Number (PAN). For American Express,  4 digits located on the front of the card, above the card
     * number on the right hand side. Visa - CVV2, MasterCard - CVC2, American Express - CID, Discover - CMID,
     * Union Pay - CVN2, JCB - CAV2.
     * It should be a nonce provided by Braintree since Skyscanner is not PCI compliance.
     * </pre>
     *
     * <code>string encrypted_card_security_code = 5;</code>
     */
    public java.lang.String getEncryptedCardSecurityCode() {
      java.lang.Object ref = encryptedCardSecurityCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encryptedCardSecurityCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 3-digit number printed on the signature panel on the back of the card and following the last four digits of the
     * Primary Account Number (PAN). For American Express,  4 digits located on the front of the card, above the card
     * number on the right hand side. Visa - CVV2, MasterCard - CVC2, American Express - CID, Discover - CMID,
     * Union Pay - CVN2, JCB - CAV2.
     * It should be a nonce provided by Braintree since Skyscanner is not PCI compliance.
     * </pre>
     *
     * <code>string encrypted_card_security_code = 5;</code>
     */
    public com.google.protobuf.ByteString
        getEncryptedCardSecurityCodeBytes() {
      java.lang.Object ref = encryptedCardSecurityCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encryptedCardSecurityCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 3-digit number printed on the signature panel on the back of the card and following the last four digits of the
     * Primary Account Number (PAN). For American Express,  4 digits located on the front of the card, above the card
     * number on the right hand side. Visa - CVV2, MasterCard - CVC2, American Express - CID, Discover - CMID,
     * Union Pay - CVN2, JCB - CAV2.
     * It should be a nonce provided by Braintree since Skyscanner is not PCI compliance.
     * </pre>
     *
     * <code>string encrypted_card_security_code = 5;</code>
     */
    public Builder setEncryptedCardSecurityCode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      encryptedCardSecurityCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 3-digit number printed on the signature panel on the back of the card and following the last four digits of the
     * Primary Account Number (PAN). For American Express,  4 digits located on the front of the card, above the card
     * number on the right hand side. Visa - CVV2, MasterCard - CVC2, American Express - CID, Discover - CMID,
     * Union Pay - CVN2, JCB - CAV2.
     * It should be a nonce provided by Braintree since Skyscanner is not PCI compliance.
     * </pre>
     *
     * <code>string encrypted_card_security_code = 5;</code>
     */
    public Builder clearEncryptedCardSecurityCode() {
      
      encryptedCardSecurityCode_ = getDefaultInstance().getEncryptedCardSecurityCode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 3-digit number printed on the signature panel on the back of the card and following the last four digits of the
     * Primary Account Number (PAN). For American Express,  4 digits located on the front of the card, above the card
     * number on the right hand side. Visa - CVV2, MasterCard - CVC2, American Express - CID, Discover - CMID,
     * Union Pay - CVN2, JCB - CAV2.
     * It should be a nonce provided by Braintree since Skyscanner is not PCI compliance.
     * </pre>
     *
     * <code>string encrypted_card_security_code = 5;</code>
     */
    public Builder setEncryptedCardSecurityCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      encryptedCardSecurityCode_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object expirationDate_ = "";
    /**
     * <pre>
     * The last month of validity Example: 0119
     * </pre>
     *
     * <code>string expiration_date = 6;</code>
     */
    public java.lang.String getExpirationDate() {
      java.lang.Object ref = expirationDate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        expirationDate_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The last month of validity Example: 0119
     * </pre>
     *
     * <code>string expiration_date = 6;</code>
     */
    public com.google.protobuf.ByteString
        getExpirationDateBytes() {
      java.lang.Object ref = expirationDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        expirationDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The last month of validity Example: 0119
     * </pre>
     *
     * <code>string expiration_date = 6;</code>
     */
    public Builder setExpirationDate(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      expirationDate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The last month of validity Example: 0119
     * </pre>
     *
     * <code>string expiration_date = 6;</code>
     */
    public Builder clearExpirationDate() {
      
      expirationDate_ = getDefaultInstance().getExpirationDate();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The last month of validity Example: 0119
     * </pre>
     *
     * <code>string expiration_date = 6;</code>
     */
    public Builder setExpirationDateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      expirationDate_ = value;
      onChanged();
      return this;
    }

    private schema.ContactInfo holderContact_;
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.ContactInfo, schema.ContactInfo.Builder, schema.ContactInfoOrBuilder> holderContactBuilder_;
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public boolean hasHolderContact() {
      return holderContactBuilder_ != null || holderContact_ != null;
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public schema.ContactInfo getHolderContact() {
      if (holderContactBuilder_ == null) {
        return holderContact_ == null ? schema.ContactInfo.getDefaultInstance() : holderContact_;
      } else {
        return holderContactBuilder_.getMessage();
      }
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public Builder setHolderContact(schema.ContactInfo value) {
      if (holderContactBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        holderContact_ = value;
        onChanged();
      } else {
        holderContactBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public Builder setHolderContact(
        schema.ContactInfo.Builder builderForValue) {
      if (holderContactBuilder_ == null) {
        holderContact_ = builderForValue.build();
        onChanged();
      } else {
        holderContactBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public Builder mergeHolderContact(schema.ContactInfo value) {
      if (holderContactBuilder_ == null) {
        if (holderContact_ != null) {
          holderContact_ =
            schema.ContactInfo.newBuilder(holderContact_).mergeFrom(value).buildPartial();
        } else {
          holderContact_ = value;
        }
        onChanged();
      } else {
        holderContactBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public Builder clearHolderContact() {
      if (holderContactBuilder_ == null) {
        holderContact_ = null;
        onChanged();
      } else {
        holderContact_ = null;
        holderContactBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public schema.ContactInfo.Builder getHolderContactBuilder() {
      
      onChanged();
      return getHolderContactFieldBuilder().getBuilder();
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    public schema.ContactInfoOrBuilder getHolderContactOrBuilder() {
      if (holderContactBuilder_ != null) {
        return holderContactBuilder_.getMessageOrBuilder();
      } else {
        return holderContact_ == null ?
            schema.ContactInfo.getDefaultInstance() : holderContact_;
      }
    }
    /**
     * <code>.submit_booking.ContactInfo holder_contact = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.ContactInfo, schema.ContactInfo.Builder, schema.ContactInfoOrBuilder> 
        getHolderContactFieldBuilder() {
      if (holderContactBuilder_ == null) {
        holderContactBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            schema.ContactInfo, schema.ContactInfo.Builder, schema.ContactInfoOrBuilder>(
                getHolderContact(),
                getParentForChildren(),
                isClean());
        holderContact_ = null;
      }
      return holderContactBuilder_;
    }

    private schema.Name holderName_;
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Name, schema.Name.Builder, schema.NameOrBuilder> holderNameBuilder_;
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public boolean hasHolderName() {
      return holderNameBuilder_ != null || holderName_ != null;
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public schema.Name getHolderName() {
      if (holderNameBuilder_ == null) {
        return holderName_ == null ? schema.Name.getDefaultInstance() : holderName_;
      } else {
        return holderNameBuilder_.getMessage();
      }
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public Builder setHolderName(schema.Name value) {
      if (holderNameBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        holderName_ = value;
        onChanged();
      } else {
        holderNameBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public Builder setHolderName(
        schema.Name.Builder builderForValue) {
      if (holderNameBuilder_ == null) {
        holderName_ = builderForValue.build();
        onChanged();
      } else {
        holderNameBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public Builder mergeHolderName(schema.Name value) {
      if (holderNameBuilder_ == null) {
        if (holderName_ != null) {
          holderName_ =
            schema.Name.newBuilder(holderName_).mergeFrom(value).buildPartial();
        } else {
          holderName_ = value;
        }
        onChanged();
      } else {
        holderNameBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public Builder clearHolderName() {
      if (holderNameBuilder_ == null) {
        holderName_ = null;
        onChanged();
      } else {
        holderName_ = null;
        holderNameBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public schema.Name.Builder getHolderNameBuilder() {
      
      onChanged();
      return getHolderNameFieldBuilder().getBuilder();
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    public schema.NameOrBuilder getHolderNameOrBuilder() {
      if (holderNameBuilder_ != null) {
        return holderNameBuilder_.getMessageOrBuilder();
      } else {
        return holderName_ == null ?
            schema.Name.getDefaultInstance() : holderName_;
      }
    }
    /**
     * <code>.submit_booking.Name holder_name = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        schema.Name, schema.Name.Builder, schema.NameOrBuilder> 
        getHolderNameFieldBuilder() {
      if (holderNameBuilder_ == null) {
        holderNameBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            schema.Name, schema.Name.Builder, schema.NameOrBuilder>(
                getHolderName(),
                getParentForChildren(),
                isClean());
        holderName_ = null;
      }
      return holderNameBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:submit_booking.PaymentCard)
  }

  // @@protoc_insertion_point(class_scope:submit_booking.PaymentCard)
  private static final schema.PaymentCard DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new schema.PaymentCard();
  }

  public static schema.PaymentCard getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PaymentCard>
      PARSER = new com.google.protobuf.AbstractParser<PaymentCard>() {
    @java.lang.Override
    public PaymentCard parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PaymentCard(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PaymentCard> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PaymentCard> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public schema.PaymentCard getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

